{"version":3,"sources":["../app.js"],"names":["PORT","process","env","app","use","text","urlencoded","extended","json","static","get","req","res","setHeader","response","JSON","stringify","status","message","send","listen","console","log"],"mappings":";;;;;;AAIA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;;;AAGA,IAAMA,OAAOC,QAAQC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;;AAEA;;;;AAfA;;;;AAmBA,IAAMG,MAAM,wBAAZ;;AAEA;;;;;AAKAA,IAAIC,GAAJ,CAAQ,qBAAR;AACAD,IAAIC,GAAJ,CAAQ,qBAAWC,IAAX,EAAR;AACAF,IAAIC,GAAJ,CAAQ,qBAAWE,UAAX,CAAsB,EAAEC,UAAU,IAAZ,EAAtB,CAAR;AACAJ,IAAIC,GAAJ,CAAQ,qBAAWI,IAAX,EAAR;AACAL,IAAIC,GAAJ,CAAQ,kBAAQK,MAAR,CAAe,OAAf,CAAR;;AAEA;;;AAGAN,IAAIC,GAAJ,CAAQ,cAAR;AACAD,IAAIC,GAAJ,CAAQ,qBAAR;;AAEA;;;AAGAD,IAAIO,GAAJ,CAAQ,GAAR,EAAa,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAC/BA,MAAIC,SAAJ,CAAc,cAAd,EAA8B,kBAA9B;AACA,MAAMC,WAAWC,KAAKC,SAAL,CAAe;AAC9BC,YAAQ,GADsB;AAE9BC,aAAS;AAFqB,GAAf,CAAjB;AAIAN,MAAIO,IAAJ,CAASL,QAAT;AACD,CAPD;;AASA;;;AAGA;AACAX,IAAIiB,MAAJ,CAAWpB,IAAX,EAAiB,SAAjB,EAA4B;AAAA,SAAMqB,QAAQC,GAAR,0BAAmCtB,IAAnC,CAAN;AAAA,CAA5B;;kBAEeG,G","file":"app.js","sourcesContent":["/**\r\n * @fileoverview Server configuration and API endpoints.\r\n * @exports app\r\n */\r\nimport express from 'express';\r\nimport bodyParser from 'body-parser';\r\nimport cors from 'cors';\r\nimport Auth from './api/auth';\r\nimport BucketLists from './api/bucketlists';\r\n\r\n/**\r\n * @constant {number} PORT\r\n */\r\nconst PORT = process.env.PORT || 3001;\r\n\r\n/**\r\n * @description Creates an express application\r\n * @constant {object}\r\n */\r\nconst app = express();\r\n\r\n/**\r\n * @description Add middleware for parsing request body to text, json, url object or form data\r\n * @function EXPRESS_USE_MIDDLEWARE\r\n * @param {middleware} body-parser A middleware for parsing request body to functional data type\r\n */\r\napp.use(cors());\r\napp.use(bodyParser.text());\r\napp.use(bodyParser.urlencoded({ extended: true }));\r\napp.use(bodyParser.json());\r\napp.use(express.static('build'));\r\n\r\n/**\r\n * @description Create server Routes\r\n */\r\napp.use('/api/v1/auth', Auth);\r\napp.use('/api/v1/bucketlists', BucketLists);\r\n\r\n/**\r\n * @description Test server connection\r\n */\r\napp.get('/', function (req, res) {\r\n  res.setHeader('Content-Type', 'application/json');\r\n  const response = JSON.stringify({\r\n    status: 200,\r\n    message: 'Server Status - OK',\r\n  });\r\n  res.send(response);\r\n});\r\n\r\n/**\r\n * @description Let express application listen on dedicated PORT\r\n */\r\n// eslint-disable-next-line\r\napp.listen(PORT, '0.0.0.0', () => console.log(`Server listening on ${PORT}`));\r\n\r\nexport default app;"]}